syntax = "proto3";
package games.sicbo;

import "recorder/record.proto";

enum ResourceType {

  // 未指定
  RESOURCE_TYPE_UNSPECIFIED = 0;
  // 牌靴
  SHOE = 1;
  // 碗公
  BOWL = 2;

}

// 步驟，依據遊戲供應商邏輯，不是每個步驟都會走到
enum Step {

  // 未指定
  STEP_UNSPECIFIED = 0;
  // 本局開始
  ROUND_START = 1;
  // 本局完成
  ROUND_FINISHED = 2;
  // 本局取消
  ROUND_CANCELED = 3;

  // 開放下注
  OPEN_FOR_BETTING = 4;
  // 停止下注
  CLOSE_THE_BETTING = 5;

  // 擲骰
  THROW_DICE = 8;

  // PITBOSS 修改骰點
  PITBOSS_MODIFY_BOWL = 16;
  
}

// 座位功能代碼
enum Seat {

  // 未指定
  SEAT_UNSPECIFIED = 0;
  // Dealer 
  DEALER = 1;
  // Pitboss
  PITBOSS = 9;

}

// 結果紀錄類型代碼
enum ResultRecordType {

  // 未指定
  RESULT_RECORD_TYPE_UNSPECIFIED = 0;
  // 遊戲局結束
  ROUND_FINISH = 1;
  // Pitboss 修正
  PITBOSS_MODIFY_RESULT = 2;

}

/**
 * The state of the game flow
 */
enum GameState {
  STATE_IDLE = 0;             // Idle
  STATE_START = 1;            // Game Starting
  STATE_COUNTER_START = 2;    // Counuter Started
  STATE_INPUT = 3;            // Wait for input
  STATE_END = 7;              // Game Ended
  STATE_CONFIRM = 8;          // Game Ended
  STATE_SHUFFLE = 30;          // Shuffle cards
}

/**
 * The status fo the current game.
 */
message GameStatus {
  string sessionID = 1;           // Unique tableid
  string gameRoundID = 2;   	    // Unique session for the game
  string tableID = 3;     	    // Unique tableid
  GameState state = 4;    	    // State of the game
  int64 startTime = 5;    	    // Time when game start
  string shoeID = 6;     	        // Shoe ID
  int32 shoe =7;
  int32 round =8;
  int32 dice1 = 10;     	        // Value of the dice 1
  int32 dice2 = 11;     	        // Value of the dice 2
  int32 dice3 = 12;     	        // Value of the dice 3
  int32 total = 13;     	        // Total dice1+dice2+dice3
  int32 odd = 14;     		    // Odd/Even=1/2
  int32 size = 15;     	        // Small/Big=1/2
  int32 countdown = 16;           // Coundown value
  int32 tie = 17;                 // dice1=dice2=dice3?1:0
  int64 dealstarttime = 18;   // Deal start time for blockchain
  int64 dealcountdown = 19;   // Deal count down for  blockchain
  string maskedcardssn = 20;  // maskedcardssn for blockchain
  map<string, int32> lucky = 40;   // Lucky Number and payout ratio
}

message DIBead {
  string gameRoundID = 1;
  string shoeID = 2;
  uint32 shoe = 3;
  uint32 round = 4;
  string result = 5;
  map<string, recorder.URLMedia> medias = 6;

  repeated int32 dice = 7;

  int32 total = 11;
  int32 odd = 12;
  int32 size = 13;
  int32 tie = 14;
  int32 odds = 15;

  map<string, int32> luckys = 31;
  map<string, int32> statistics = 32;
}